{"version":3,"sources":["Admin.js","Schedule.js","App.js","serviceWorker.js","index.js","heartbeat.svg"],"names":["styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","ScheduleHistory","react_default","a","createElement","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","Array","from","this","props","data","map","row","key","id","component","scope","name","telephone","email","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","begin_date","end_date","Component","Schedule","state","response","post","responseToPost","date","startTime","endTime","callApi","_callee","body","regenerator_default","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","handleSubmit","_callee2","e","_context2","preventDefault","method","headers","Content-Type","JSON","stringify","_this","text","setState","today","setDate","getDate","toISOString","substr","_this2","onSubmit","type","pattern","value","onChange","target","Button_default","variant","Text","App","responseToGet","handleSchedule","dataType","Accept","handleAdmin","then","res","express","react_router_dom","AppBar_default","position","Toolbar_default","onClick","to","src","logo","alt","react_router","exact","path","render","Admin","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.44cfe5c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'hidden',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nclass ScheduleHistory extends Component {\n  render() {\n    return (\n    <Paper className={styles.root}>\n      <Table className={styles.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Nome Paciente</TableCell>\n            <TableCell align=\"right\">Telefone</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Horário Início</TableCell>\n            <TableCell align=\"right\">Horário Término</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>     \n          {Array.from(this.props.data).map((row,key) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.telephone}</TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n              <TableCell align=\"right\">{new Intl.DateTimeFormat('pt-BR', {\n                year: 'numeric', \n                month: 'long',\n                day: '2-digit' ,\n                hour: 'numeric',\n                minute: 'numeric'\n                }).format(new Date(row.begin_date))}</TableCell>\n              <TableCell align=\"right\">{new Intl.DateTimeFormat('pt-BR', {\n                year: 'numeric', \n                month: 'long',\n                day: '2-digit' ,\n                hour: 'numeric',\n                minute: 'numeric'\n                }).format(new Date(row.end_date))}</TableCell>\n            </TableRow>\n          ))\n          }\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  }\n};\n\nexport default ScheduleHistory;","import React, { Component } from 'react';\nimport { Text } from 'react-native';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\n\nclass Schedule extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n    name: '',\n    telephone: '',\n    email: '',\n    date: '',\n    startTime: '',\n    endTime: ''\n  };\n\n  componentDidMount() {\n    var today = new Date();\n    today.setDate(today.getDate());\n\n    this.setState({ date: today.toISOString().substr(0,10)});\n\n    //test\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/schedule', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        post: this.state.post,\n        name : this.state.name,\n        telephone : this.state.telephone,\n        email : this.state.email,\n        date : this.state.date,\n        startTime : this.state.startTime,\n        endTime : this.state.endTime\n     }),\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n          <p>\n            <strong>Insira seus dados para agendar uma consulta:</strong>\n          </p>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"App-div-inline\">\n              <div className=\"App-div\">\n                <label className=\"App-label\">\n                  Nome\n                </label>\n              </div>\n              <div className=\"App-div\">\n                <label className=\"App-label\">\n                  Telefone\n                </label>\n              </div>\n              <div className=\"App-div\">\n                <label className=\"App-label\">\n                  Email\n                </label>\n              </div>\n              <div className=\"App-div\">\n                <label className=\"App-label\">\n                  Data\n                </label>\n              </div>\n              <div className=\"App-div\">\n                <label className=\"App-label\">\n                  Horário\n                </label>\n              </div>\n            </div>\n            <div className=\"App-div-inline\">\n              <div className=\"App-div\">\n                <input\n                  className = \"App-input\"\n                  type=\"text\"\n                  pattern=\"[a-zA-Z ]+\"\n                  value={this.state.name}\n                  onChange={e => this.setState({ name: e.target.value })}\n                />\n              </div>\n              <div className=\"App-div\">\n                <input \n                  className = \"App-input\"\n                  type=\"number\"\n                  pattern=\"[0-9]+\"\n                  value={this.state.telephone}\n                  onChange={e => this.setState({ telephone: e.target.value })}\n                />\n              </div>\n              <div className=\"App-div\">\n                <input\n                  className = \"App-input\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onChange={e => this.setState({ email: e.target.value })}\n                />\n              </div>\n              <div className=\"App-div\">\n                <input\n                  className = \"App-input\"\n                  type=\"date\"\n                  value={this.state.date}\n                  onChange={e => this.setState({ date: e.target.value })}\n                />\n              </div>\n              <div className=\"App-div\">\n                <input\n                  className = \"App-input\"\n                  type=\"time\"\n                  value={this.state.startTime}\n                  onChange={e => this.setState({ startTime: e.target.value })}\n                />\n                às\n                <input\n                  className = \"App-input\"\n                  type=\"time\"\n                  value={this.state.endTime}\n                  onChange={e => this.setState({ endTime: e.target.value })}\n                />\n              </div>\n            </div>\n            <div className=\"App-div\">\n              <Button\n                variant=\"contained\"\n                className=\"App-submit-button\"\n                type=\"submit\">Agendar\n              </Button>\n            </div>\n          </form>\n          <Text>{this.state.responseToPost}</Text>          \n        </div>\n    )\n  }\n};\n\n\nexport default Schedule;","import React, { Component } from 'react';\nimport logo from './heartbeat.svg';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport {\n  Route,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\nimport ScheduleHistory from './Admin.js'\nimport Schedule from './Schedule';\n\nexport default class App extends Component {  \n\n  state = {\n    response: '',\n    responseToGet: ''\n  }\n\n  handleSchedule = async e => {\n    e.preventDefault();\n    fetch('/', \n    {\n      method: 'get',\n      dataType: 'json',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n  };\n\n  handleAdmin = async e => {\n    e.preventDefault();\n    fetch('/api/admin', \n    {\n      method: 'get',\n      dataType: 'json',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => res.json())\n    .then(res => {\n      this.setState( { responseToGet: res.express });\n    });\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <AppBar className=\"App-color\" position=\"relative\"> \n            <Toolbar className=\"App-color\">\n            <Button\n              className=\"App-admin-button\"\n              variant=\"outlined\"\n                onClick={this.handleSchedule}\n              >      \n              <Link to=\"/\">\n              Agendar</Link>\n            </Button>\n            <Button\n              className=\"App-admin-button\"\n              variant=\"outlined\"\n                onClick={this.handleAdmin}\n              >      \n              <Link to=\"/api/admin\">\n              Administração</Link>\n            </Button>\n            </Toolbar>\n          </AppBar>\n          <header className=\"App-header\"> \n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            \n            <header className=\"App-medical-header\">\n              MEDICAL\n            </header>\n          </header>          \n        </div>\n        <div className=\"content\">\n          <Route exact path=\"/\" component={Schedule}/>\n          <Route\n          path=\"/api/admin\"\n          render={() => <ScheduleHistory data={this.state.responseToGet} />} \n          />\n        </div>\n      </HashRouter>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/heartbeat.f123b79b.svg\";"],"sourceRoot":""}